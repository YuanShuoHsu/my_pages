{"version":3,"sources":["TodoList.js","reportWebVitals.js","index.js"],"names":["TodoList","props","state","inputValue","handleinputValue","placeholder","value","this","onChange","e","handleInputChange","onKeyPress","handleKeypress","type","onClick","handleBtnClick","handleItemDelete","dangerouslySetInnerHTML","__html","inputvalue","target","length","setState","charCode","preState","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qOA0EeA,E,kDArEX,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IACDC,MAAQ,CACTC,WAAY,GACZC,iBAAiB,IAJN,E,0CAOnB,WAAU,IAAD,OACL,OACI,eAAC,WAAD,WACI,gCACI,uBACIC,YAAc,eACdC,MAAUC,KAAKL,MAAMC,WACrBK,SAAa,SAACC,GAAD,OAAO,EAAKC,kBAAkBD,IAC3CE,WAAa,SAACF,GAAD,OAAO,EAAKG,eAAeH,MAE5C,cAAC,IAAD,CAAQI,KAAK,UACTC,QAAY,SAACL,GAAD,OAAO,EAAKM,eAAeN,IAD3C,6BAYJ,mBACIK,QAAY,SAACL,GAAD,OAAO,EAAKO,iBAAiBP,IACzCQ,wBAA2B,CAAEC,OAAQX,KAAKL,MAAME,yB,+BAQhE,SAAkBK,GACd,IAAMU,EAAaV,EAAEW,OAAOd,MACxBa,EAAWE,OAAS,IAGxBd,KAAKe,UAAS,iBAAO,CACjBnB,WAAYgB,Q,4BAIpB,SAAeV,GACQ,KAAfA,EAAEc,UACFhB,KAAKQ,mB,4BAIb,WACIR,KAAKe,UAAS,SAACE,GAAD,MAAe,CACzBpB,iBAAkBoB,EAASrB,WAC3BA,WAAY,S,8BAIpB,WACII,KAAKe,UAAS,iBAAO,CACjBlB,iBAAkB,W,GAjEPqB,aCQRC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.d1467b7e.chunk.js","sourcesContent":["import React, { Component, Fragment } from 'react';\nimport 'antd/dist/antd.css';\nimport { Button } from 'antd';\n\nclass TodoList extends Component{\n    constructor(props) {\n        super(props);\n        this.state = {\n            inputValue: '',\n            handleinputValue:''\n        }\n    }\n    render() {\n        return(\n            <Fragment>\n                <div>\n                    <input\n                        placeholder = '留言'\n                        value = { this.state.inputValue }\n                        onChange = { (e) => this.handleInputChange(e) }\n                        onKeyPress={ (e) => this.handleKeypress(e) }\n                    />\n                    <Button type=\"primary\"\n                        onClick = { (e) => this.handleBtnClick(e) }\n                    >提交</Button>\n                </div>\n                {/* <div class=\"input-group input-group-sm\">\n                    <input type=\"text\" class=\"form-control\" placeholder=\"留言\" id=\"search_text_collapse\" onkeydown=\"keyboard_enter_collapse(event)\"/>\n                    <div class=\"input-group-append\">\n                        <button class=\"btn btn-outline-secondary\" type=\"button\" id=\"search_button\" onclick=\"search_data()\">\n                            <i class=\"fas fa-music fa-sm fa-fw\" aria-hidden=\"true\"></i>\n                        </button>\n                    </div>\n                </div> */}\n                <p\n                    onClick = { (e) => this.handleItemDelete(e) }\n                    dangerouslySetInnerHTML = {{ __html: this.state.handleinputValue }}\n                >\n                </p>\n                \n            </Fragment>\n        )\n    }\n\n    handleInputChange(e) {\n        const inputvalue = e.target.value\n        if (inputvalue.length > 20) {\n            return\n        }\n        this.setState(() => ({\n            inputValue: inputvalue\n        }))\n    }\n\n    handleKeypress(e) {\n        if (e.charCode === 13) {\n            this.handleBtnClick()\n        }\n    }\n\n    handleBtnClick() {\n        this.setState((preState) => ({\n            handleinputValue: preState.inputValue,\n            inputValue: ''\n        }))\n    }\n\n    handleItemDelete() {\n        this.setState(() => ({\n            handleinputValue: ''\n        }))\n    }\n}\n\nexport default TodoList;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport TodoList from './TodoList';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <TodoList />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}